/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package espensestracker.views;

import espensestracker.util.Formatter;
import espensestracker.controller.ExpensesController;
import espensestracker.controller.IncomeController;
import espensestracker.dto.ExpensesListDto;
import espensestracker.dto.IncomeListDto;
import espensestracker.views.IncomeAddView;
import espensestracker.views.IncomeListView;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import espensestracker.controller.IExpensesController;

/**
 *
 * @author Chamath
 */
public class ExpensesListView extends javax.swing.JPanel {

    private IExpensesController expenseController;

     
    public ExpensesListView(int month) {
        System.out.println("Expenses list view called");
        initComponents();
        DefaultTableCellRenderer tableCellRenderer = new DefaultTableCellRenderer();
        tableCellRenderer.setHorizontalAlignment(SwingConstants.RIGHT);
        TableColumn tableColumn = tblExpenses.getColumnModel().getColumn(1);
        tblExpenses.setBackground(UIManager.getColor(new JTableHeader().getBackground()));
        tableColumn.setCellRenderer(tableCellRenderer);
        expenseController = new ExpensesController();
        loadExpensesData(month);
    }

    private double loadExpensesData(int month) {
        double total = 0.00;
        try {
            ArrayList<ExpensesListDto> expensesList = expenseController.getExpensesListByMonth(month);
            DefaultTableModel model = (DefaultTableModel) tblExpenses.getModel();
            model.setNumRows(0);
            total = expensesList.stream().map((exp) -> {
                model.addRow(new Object[]{exp.getCategoryName(),
                    Formatter.currencyFormat(exp.getAmount())});
                return exp;
            }).map((expp) -> expp.getAmount()).reduce(total, (accumulator, _item) -> accumulator + _item);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(IncomeListView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return total;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblExpenses = new javax.swing.JTable();
        btnExpenseAdd = new javax.swing.JButton();

        setBackground(new java.awt.Color(228, 239, 247));
        setPreferredSize(new java.awt.Dimension(150, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Expenses");
        jLabel1.setToolTipText("");

        jLabel2.setText("Available Expenses");
        jLabel2.setToolTipText("");

        tblExpenses.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        tblExpenses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblExpenses.setShowHorizontalLines(false);
        tblExpenses.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblExpenses);

        btnExpenseAdd.setBackground(new java.awt.Color(159, 199, 247));
        btnExpenseAdd.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnExpenseAdd.setForeground(new java.awt.Color(25, 144, 234));
        btnExpenseAdd.setText("Add New");
        btnExpenseAdd.setToolTipText("");
        btnExpenseAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpenseAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnExpenseAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExpenseAdd)
                .addContainerGap(133, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("expensesLabel");
    }// </editor-fold>//GEN-END:initComponents

    private void btnExpenseAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpenseAddActionPerformed
        ExpensesAddView expenseView = new ExpensesAddView(null, true);
        expenseView.setLocationRelativeTo(null);
        expenseView.setVisible(true);
    }//GEN-LAST:event_btnExpenseAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpenseAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblExpenses;
    // End of variables declaration//GEN-END:variables
}
